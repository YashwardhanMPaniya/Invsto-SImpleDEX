{
	"id": "d9ea99eef518ccdde4200f4714416ce3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/1_Storage.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.0;\n\n/**\n * @title Storage\n * @dev Store & retrieve value in a variable\n * @custom:dev-run-script ./scripts/deploy_with_ethers.ts\n */\n\n\ncontract Storage {\n\n    struct Deposit{\n        uint256 amount;\n        uint256 timestamp;\n    }\n\n    mapping(address => Deposit) depositor;\n    address[] stakers;\n\n    function deposit() public payable {\n        require(msg.value>0);\n        depositor[msg.sender] = Deposit(msg.value, block.timestamp);\n\n    }\n\n    function withdraw() external{\n        require(depositor[msg.sender].amount != 0);\n        \n            (bool success, ) = msg.sender.call{value: depositor[msg.sender].amount}(\"\");\n                require(success, \"Withdrawal failed\");\n        \n    }\n\n    function penalty(uint256 amount) private {\n        amount = amount/stakers.length-1;\n        for(uint i=0;i<stakers.length;i++){\n            if(stakers[i] != msg.sender){\n                payable(stakers[i]).transfer(amount);\n            }\n        }\n    }\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/1_Storage.sol": {
				"Storage": {
					"abi": [
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:dev-run-script": "./scripts/deploy_with_ethers.ts",
						"details": "Store & retrieve value in a variable",
						"kind": "dev",
						"methods": {},
						"title": "Storage",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/1_Storage.sol\":193:1025  contract Storage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/1_Storage.sol\":193:1025  contract Storage {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ccfd60b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/1_Storage.sol\":509:758  function withdraw() external{... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_4\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_4:\n      pop\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/1_Storage.sol\":362:503  function deposit() public payable {... */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/1_Storage.sol\":509:758  function withdraw() external{... */\n    tag_6:\n        /* \"contracts/1_Storage.sol\":587:588  0 */\n      0x00\n        /* \"contracts/1_Storage.sol\":555:564  depositor */\n      dup1\n        /* \"contracts/1_Storage.sol\":555:576  depositor[msg.sender] */\n      0x00\n        /* \"contracts/1_Storage.sol\":565:575  msg.sender */\n      caller\n        /* \"contracts/1_Storage.sol\":555:576  depositor[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_Storage.sol\":555:583  depositor[msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/1_Storage.sol\":555:588  depositor[msg.sender].amount != 0 */\n      sub\n        /* \"contracts/1_Storage.sol\":547:589  require(depositor[msg.sender].amount != 0) */\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n        /* \"contracts/1_Storage.sol\":613:625  bool success */\n      0x00\n        /* \"contracts/1_Storage.sol\":631:641  msg.sender */\n      caller\n        /* \"contracts/1_Storage.sol\":631:646  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1_Storage.sol\":654:663  depositor */\n      0x00\n        /* \"contracts/1_Storage.sol\":654:675  depositor[msg.sender] */\n      dup1\n        /* \"contracts/1_Storage.sol\":664:674  msg.sender */\n      caller\n        /* \"contracts/1_Storage.sol\":654:675  depositor[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_Storage.sol\":654:682  depositor[msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/1_Storage.sol\":631:687  msg.sender.call{value: depositor[msg.sender].amount}(\"\") */\n      mload(0x40)\n      tag_11\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_15\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_14)\n    tag_15:\n      0x60\n      swap2\n      pop\n    tag_14:\n      pop\n        /* \"contracts/1_Storage.sol\":612:687  (bool success, ) = msg.sender.call{value: depositor[msg.sender].amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/1_Storage.sol\":713:720  success */\n      dup1\n        /* \"contracts/1_Storage.sol\":705:742  require(success, \"Withdrawal failed\") */\n      tag_16\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_17\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_16:\n        /* \"contracts/1_Storage.sol\":537:758  {... */\n      pop\n        /* \"contracts/1_Storage.sol\":509:758  function withdraw() external{... */\n      jump\t// out\n        /* \"contracts/1_Storage.sol\":362:503  function deposit() public payable {... */\n    tag_8:\n        /* \"contracts/1_Storage.sol\":424:425  0 */\n      0x00\n        /* \"contracts/1_Storage.sol\":414:423  msg.value */\n      callvalue\n        /* \"contracts/1_Storage.sol\":414:425  msg.value>0 */\n      gt\n        /* \"contracts/1_Storage.sol\":406:426  require(msg.value>0) */\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n        /* \"contracts/1_Storage.sol\":460:495  Deposit(msg.value, block.timestamp) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/1_Storage.sol\":468:477  msg.value */\n      callvalue\n        /* \"contracts/1_Storage.sol\":460:495  Deposit(msg.value, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/1_Storage.sol\":479:494  block.timestamp */\n      timestamp\n        /* \"contracts/1_Storage.sol\":460:495  Deposit(msg.value, block.timestamp) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/1_Storage.sol\":436:445  depositor */\n      0x00\n        /* \"contracts/1_Storage.sol\":436:457  depositor[msg.sender] */\n      dup1\n        /* \"contracts/1_Storage.sol\":446:456  msg.sender */\n      caller\n        /* \"contracts/1_Storage.sol\":436:457  depositor[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_Storage.sol\":436:495  depositor[msg.sender] = Deposit(msg.value, block.timestamp) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/1_Storage.sol\":362:503  function deposit() public payable {... */\n      jump\t// out\n        /* \"#utility.yul\":7:154   */\n    tag_21:\n        /* \"#utility.yul\":108:119   */\n      0x00\n        /* \"#utility.yul\":145:148   */\n      dup2\n        /* \"#utility.yul\":130:148   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":160:274   */\n    tag_22:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":280:678   */\n    tag_23:\n        /* \"#utility.yul\":439:442   */\n      0x00\n        /* \"#utility.yul\":460:543   */\n      tag_31\n        /* \"#utility.yul\":541:542   */\n      0x00\n        /* \"#utility.yul\":536:539   */\n      dup4\n        /* \"#utility.yul\":460:543   */\n      tag_21\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":453:543   */\n      swap2\n      pop\n        /* \"#utility.yul\":552:645   */\n      tag_32\n        /* \"#utility.yul\":641:644   */\n      dup3\n        /* \"#utility.yul\":552:645   */\n      tag_22\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":670:671   */\n      0x00\n        /* \"#utility.yul\":665:668   */\n      dup3\n        /* \"#utility.yul\":661:672   */\n      add\n        /* \"#utility.yul\":654:672   */\n      swap1\n      pop\n        /* \"#utility.yul\":280:678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":684:1063   */\n    tag_12:\n        /* \"#utility.yul\":868:871   */\n      0x00\n        /* \"#utility.yul\":890:1037   */\n      tag_34\n        /* \"#utility.yul\":1033:1036   */\n      dup3\n        /* \"#utility.yul\":890:1037   */\n      tag_23\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":883:1037   */\n      swap2\n      pop\n        /* \"#utility.yul\":1054:1057   */\n      dup2\n        /* \"#utility.yul\":1047:1057   */\n      swap1\n      pop\n        /* \"#utility.yul\":684:1063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1069:1238   */\n    tag_24:\n        /* \"#utility.yul\":1153:1164   */\n      0x00\n        /* \"#utility.yul\":1187:1193   */\n      dup3\n        /* \"#utility.yul\":1182:1185   */\n      dup3\n        /* \"#utility.yul\":1175:1194   */\n      mstore\n        /* \"#utility.yul\":1227:1231   */\n      0x20\n        /* \"#utility.yul\":1222:1225   */\n      dup3\n        /* \"#utility.yul\":1218:1232   */\n      add\n        /* \"#utility.yul\":1203:1232   */\n      swap1\n      pop\n        /* \"#utility.yul\":1069:1238   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1244:1411   */\n    tag_25:\n        /* \"#utility.yul\":1384:1403   */\n      0x5769746864726177616c206661696c6564000000000000000000000000000000\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1372:1378   */\n      dup3\n        /* \"#utility.yul\":1368:1382   */\n      add\n        /* \"#utility.yul\":1361:1404   */\n      mstore\n        /* \"#utility.yul\":1244:1411   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1417:1783   */\n    tag_26:\n        /* \"#utility.yul\":1559:1562   */\n      0x00\n        /* \"#utility.yul\":1580:1647   */\n      tag_38\n        /* \"#utility.yul\":1644:1646   */\n      0x11\n        /* \"#utility.yul\":1639:1642   */\n      dup4\n        /* \"#utility.yul\":1580:1647   */\n      tag_24\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1573:1647   */\n      swap2\n      pop\n        /* \"#utility.yul\":1656:1749   */\n      tag_39\n        /* \"#utility.yul\":1745:1748   */\n      dup3\n        /* \"#utility.yul\":1656:1749   */\n      tag_25\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1774:1776   */\n      0x20\n        /* \"#utility.yul\":1769:1772   */\n      dup3\n        /* \"#utility.yul\":1765:1777   */\n      add\n        /* \"#utility.yul\":1758:1777   */\n      swap1\n      pop\n        /* \"#utility.yul\":1417:1783   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1789:2208   */\n    tag_18:\n        /* \"#utility.yul\":1955:1959   */\n      0x00\n        /* \"#utility.yul\":1993:1995   */\n      0x20\n        /* \"#utility.yul\":1982:1991   */\n      dup3\n        /* \"#utility.yul\":1978:1996   */\n      add\n        /* \"#utility.yul\":1970:1996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2042:2051   */\n      dup2\n        /* \"#utility.yul\":2036:2040   */\n      dup2\n        /* \"#utility.yul\":2032:2052   */\n      sub\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2017:2026   */\n      dup4\n        /* \"#utility.yul\":2013:2030   */\n      add\n        /* \"#utility.yul\":2006:2053   */\n      mstore\n        /* \"#utility.yul\":2070:2201   */\n      tag_41\n        /* \"#utility.yul\":2196:2200   */\n      dup2\n        /* \"#utility.yul\":2070:2201   */\n      tag_26\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":2062:2201   */\n      swap1\n      pop\n        /* \"#utility.yul\":1789:2208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201f4a140f70e12496a29c9b5eba57e2546ddc761f0535fc76be8c0acb7ae06b9a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506102e08061001c5f395ff3fe608060405260043610610028575f3560e01c80633ccfd60b1461002c578063d0e30db014610042575b5f80fd5b348015610037575f80fd5b5061004061004c565b005b61004a61017e565b005b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015403610095575f80fd5b5f3373ffffffffffffffffffffffffffffffffffffffff165f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01546040516100f89061021e565b5f6040518083038185875af1925050503d805f8114610132576040519150601f19603f3d011682016040523d82523d5f602084013e610137565b606091505b505090508061017b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101729061028c565b60405180910390fd5b50565b5f3411610189575f80fd5b6040518060400160405280348152602001428152505f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015560208201518160010155905050565b5f81905092915050565b50565b5f6102095f836101f1565b9150610214826101fb565b5f82019050919050565b5f610228826101fe565b9150819050919050565b5f82825260208201905092915050565b7f5769746864726177616c206661696c65640000000000000000000000000000005f82015250565b5f610276601183610232565b915061028182610242565b602082019050919050565b5f6020820190508181035f8301526102a38161026a565b905091905056fea26469706673582212201f4a140f70e12496a29c9b5eba57e2546ddc761f0535fc76be8c0acb7ae06b9a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x28 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x2C JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x42 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40 PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A PUSH2 0x17E JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SUB PUSH2 0x95 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP1 PUSH2 0x21E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x132 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x137 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x17B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172 SWAP1 PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x209 PUSH0 DUP4 PUSH2 0x1F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x214 DUP3 PUSH2 0x1FB JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x228 DUP3 PUSH2 0x1FE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5769746864726177616C206661696C6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x276 PUSH1 0x11 DUP4 PUSH2 0x232 JUMP JUMPDEST SWAP2 POP PUSH2 0x281 DUP3 PUSH2 0x242 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A3 DUP2 PUSH2 0x26A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F BLOBBASEFEE EQ 0xF PUSH17 0xE12496A29C9B5EBA57E2546DDC761F0535 0xFC PUSH23 0xBE8C0ACB7AE06B9A64736F6C634300081A003300000000 ",
							"sourceMap": "193:832:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@deposit_38": {
									"entryPoint": 382,
									"id": 38,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_71": {
									"entryPoint": 76,
									"id": 71,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2211:1",
										"nodeType": "YulBlock",
										"src": "0:2211:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "120:34:1",
													"nodeType": "YulBlock",
													"src": "120:34:1",
													"statements": [
														{
															"nativeSrc": "130:18:1",
															"nodeType": "YulAssignment",
															"src": "130:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "145:3:1",
																"nodeType": "YulIdentifier",
																"src": "145:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "130:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "130:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7:147:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "92:3:1",
														"nodeType": "YulTypedName",
														"src": "92:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "97:6:1",
														"nodeType": "YulTypedName",
														"src": "97:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "108:11:1",
														"nodeType": "YulTypedName",
														"src": "108:11:1",
														"type": ""
													}
												],
												"src": "7:147:1"
											},
											{
												"body": {
													"nativeSrc": "266:8:1",
													"nodeType": "YulBlock",
													"src": "266:8:1",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "160:114:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "258:6:1",
														"nodeType": "YulTypedName",
														"src": "258:6:1",
														"type": ""
													}
												],
												"src": "160:114:1"
											},
											{
												"body": {
													"nativeSrc": "443:235:1",
													"nodeType": "YulBlock",
													"src": "443:235:1",
													"statements": [
														{
															"nativeSrc": "453:90:1",
															"nodeType": "YulAssignment",
															"src": "453:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "536:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "536:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "541:1:1",
																		"nodeType": "YulLiteral",
																		"src": "541:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "460:75:1",
																	"nodeType": "YulIdentifier",
																	"src": "460:75:1"
																},
																"nativeSrc": "460:83:1",
																"nodeType": "YulFunctionCall",
																"src": "460:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "453:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "453:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "641:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "641:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "552:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "552:88:1"
																},
																"nativeSrc": "552:93:1",
																"nodeType": "YulFunctionCall",
																"src": "552:93:1"
															},
															"nativeSrc": "552:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "552:93:1"
														},
														{
															"nativeSrc": "654:18:1",
															"nodeType": "YulAssignment",
															"src": "654:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "665:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "665:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "670:1:1",
																		"nodeType": "YulLiteral",
																		"src": "670:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "661:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "661:3:1"
																},
																"nativeSrc": "661:11:1",
																"nodeType": "YulFunctionCall",
																"src": "661:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "654:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "654:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "280:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "431:3:1",
														"nodeType": "YulTypedName",
														"src": "431:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "439:3:1",
														"nodeType": "YulTypedName",
														"src": "439:3:1",
														"type": ""
													}
												],
												"src": "280:398:1"
											},
											{
												"body": {
													"nativeSrc": "872:191:1",
													"nodeType": "YulBlock",
													"src": "872:191:1",
													"statements": [
														{
															"nativeSrc": "883:154:1",
															"nodeType": "YulAssignment",
															"src": "883:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1033:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1033:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "890:141:1",
																	"nodeType": "YulIdentifier",
																	"src": "890:141:1"
																},
																"nativeSrc": "890:147:1",
																"nodeType": "YulFunctionCall",
																"src": "890:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "883:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "883:3:1"
																}
															]
														},
														{
															"nativeSrc": "1047:10:1",
															"nodeType": "YulAssignment",
															"src": "1047:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "1054:3:1",
																"nodeType": "YulIdentifier",
																"src": "1054:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1047:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1047:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "684:379:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "859:3:1",
														"nodeType": "YulTypedName",
														"src": "859:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "868:3:1",
														"nodeType": "YulTypedName",
														"src": "868:3:1",
														"type": ""
													}
												],
												"src": "684:379:1"
											},
											{
												"body": {
													"nativeSrc": "1165:73:1",
													"nodeType": "YulBlock",
													"src": "1165:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1182:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1182:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1187:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1187:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1175:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1175:6:1"
																},
																"nativeSrc": "1175:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1175:19:1"
															},
															"nativeSrc": "1175:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1175:19:1"
														},
														{
															"nativeSrc": "1203:29:1",
															"nodeType": "YulAssignment",
															"src": "1203:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1222:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1222:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1227:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1227:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1218:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1218:3:1"
																},
																"nativeSrc": "1218:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1218:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1203:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1203:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1069:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1137:3:1",
														"nodeType": "YulTypedName",
														"src": "1137:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1142:6:1",
														"nodeType": "YulTypedName",
														"src": "1142:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1153:11:1",
														"nodeType": "YulTypedName",
														"src": "1153:11:1",
														"type": ""
													}
												],
												"src": "1069:169:1"
											},
											{
												"body": {
													"nativeSrc": "1350:61:1",
													"nodeType": "YulBlock",
													"src": "1350:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1372:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1372:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1380:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1380:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1368:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1368:3:1"
																		},
																		"nativeSrc": "1368:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1368:14:1"
																	},
																	{
																		"hexValue": "5769746864726177616c206661696c6564",
																		"kind": "string",
																		"nativeSrc": "1384:19:1",
																		"nodeType": "YulLiteral",
																		"src": "1384:19:1",
																		"type": "",
																		"value": "Withdrawal failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1361:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1361:6:1"
																},
																"nativeSrc": "1361:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1361:43:1"
															},
															"nativeSrc": "1361:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "1361:43:1"
														}
													]
												},
												"name": "store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
												"nativeSrc": "1244:167:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1342:6:1",
														"nodeType": "YulTypedName",
														"src": "1342:6:1",
														"type": ""
													}
												],
												"src": "1244:167:1"
											},
											{
												"body": {
													"nativeSrc": "1563:220:1",
													"nodeType": "YulBlock",
													"src": "1563:220:1",
													"statements": [
														{
															"nativeSrc": "1573:74:1",
															"nodeType": "YulAssignment",
															"src": "1573:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1639:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1639:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1644:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1644:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1580:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "1580:58:1"
																},
																"nativeSrc": "1580:67:1",
																"nodeType": "YulFunctionCall",
																"src": "1580:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1573:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1573:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1745:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1745:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																	"nativeSrc": "1656:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "1656:88:1"
																},
																"nativeSrc": "1656:93:1",
																"nodeType": "YulFunctionCall",
																"src": "1656:93:1"
															},
															"nativeSrc": "1656:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "1656:93:1"
														},
														{
															"nativeSrc": "1758:19:1",
															"nodeType": "YulAssignment",
															"src": "1758:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1769:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1769:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1774:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1774:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1765:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1765:3:1"
																},
																"nativeSrc": "1765:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1765:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1758:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1758:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1417:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1551:3:1",
														"nodeType": "YulTypedName",
														"src": "1551:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1559:3:1",
														"nodeType": "YulTypedName",
														"src": "1559:3:1",
														"type": ""
													}
												],
												"src": "1417:366:1"
											},
											{
												"body": {
													"nativeSrc": "1960:248:1",
													"nodeType": "YulBlock",
													"src": "1960:248:1",
													"statements": [
														{
															"nativeSrc": "1970:26:1",
															"nodeType": "YulAssignment",
															"src": "1970:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1982:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1982:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1993:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1993:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1978:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1978:3:1"
																},
																"nativeSrc": "1978:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1978:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1970:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1970:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2017:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2017:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2028:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2028:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2013:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2013:3:1"
																		},
																		"nativeSrc": "2013:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2013:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2036:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2036:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2042:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2042:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2032:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2032:3:1"
																		},
																		"nativeSrc": "2032:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2032:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2006:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2006:6:1"
																},
																"nativeSrc": "2006:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2006:47:1"
															},
															"nativeSrc": "2006:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2006:47:1"
														},
														{
															"nativeSrc": "2062:139:1",
															"nodeType": "YulAssignment",
															"src": "2062:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2196:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2196:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2070:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "2070:124:1"
																},
																"nativeSrc": "2070:131:1",
																"nodeType": "YulFunctionCall",
																"src": "2070:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2062:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2062:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1789:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1940:9:1",
														"nodeType": "YulTypedName",
														"src": "1940:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1955:4:1",
														"nodeType": "YulTypedName",
														"src": "1955:4:1",
														"type": ""
													}
												],
												"src": "1789:419:1"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdrawal failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610028575f3560e01c80633ccfd60b1461002c578063d0e30db014610042575b5f80fd5b348015610037575f80fd5b5061004061004c565b005b61004a61017e565b005b5f805f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015403610095575f80fd5b5f3373ffffffffffffffffffffffffffffffffffffffff165f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01546040516100f89061021e565b5f6040518083038185875af1925050503d805f8114610132576040519150601f19603f3d011682016040523d82523d5f602084013e610137565b606091505b505090508061017b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101729061028c565b60405180910390fd5b50565b5f3411610189575f80fd5b6040518060400160405280348152602001428152505f803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015560208201518160010155905050565b5f81905092915050565b50565b5f6102095f836101f1565b9150610214826101fb565b5f82019050919050565b5f610228826101fe565b9150819050919050565b5f82825260208201905092915050565b7f5769746864726177616c206661696c65640000000000000000000000000000005f82015250565b5f610276601183610232565b915061028182610242565b602082019050919050565b5f6020820190508181035f8301526102a38161026a565b905091905056fea26469706673582212201f4a140f70e12496a29c9b5eba57e2546ddc761f0535fc76be8c0acb7ae06b9a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x28 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x2C JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x42 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40 PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A PUSH2 0x17E JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SUB PUSH2 0x95 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP1 PUSH2 0x21E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x132 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x137 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x17B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172 SWAP1 PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x209 PUSH0 DUP4 PUSH2 0x1F1 JUMP JUMPDEST SWAP2 POP PUSH2 0x214 DUP3 PUSH2 0x1FB JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x228 DUP3 PUSH2 0x1FE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5769746864726177616C206661696C6564000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x276 PUSH1 0x11 DUP4 PUSH2 0x232 JUMP JUMPDEST SWAP2 POP PUSH2 0x281 DUP3 PUSH2 0x242 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A3 DUP2 PUSH2 0x26A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F BLOBBASEFEE EQ 0xF PUSH17 0xE12496A29C9B5EBA57E2546DDC761F0535 0xFC PUSH23 0xBE8C0ACB7AE06B9A64736F6C634300081A003300000000 ",
							"sourceMap": "193:832:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;509:249;;;;;;;;;;;;;:::i;:::-;;362:141;;;:::i;:::-;;509:249;587:1;555:9;:21;565:10;555:21;;;;;;;;;;;;;;;:28;;;:33;547:42;;;;;;613:12;631:10;:15;;654:9;:21;664:10;654:21;;;;;;;;;;;;;;;:28;;;631:56;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;612:75;;;713:7;705:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;537:221;509:249::o;362:141::-;424:1;414:9;:11;406:20;;;;;;460:35;;;;;;;;468:9;460:35;;;;479:15;460:35;;;436:9;:21;446:10;436:21;;;;;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;;362:141::o;7:147:1:-;108:11;145:3;130:18;;7:147;;;;:::o;160:114::-;;:::o;280:398::-;439:3;460:83;541:1;536:3;460:83;:::i;:::-;453:90;;552:93;641:3;552:93;:::i;:::-;670:1;665:3;661:11;654:18;;280:398;;;:::o;684:379::-;868:3;890:147;1033:3;890:147;:::i;:::-;883:154;;1054:3;1047:10;;684:379;;;:::o;1069:169::-;1153:11;1187:6;1182:3;1175:19;1227:4;1222:3;1218:14;1203:29;;1069:169;;;;:::o;1244:167::-;1384:19;1380:1;1372:6;1368:14;1361:43;1244:167;:::o;1417:366::-;1559:3;1580:67;1644:2;1639:3;1580:67;:::i;:::-;1573:74;;1656:93;1745:3;1656:93;:::i;:::-;1774:2;1769:3;1765:12;1758:19;;1417:366;;;:::o;1789:419::-;1955:4;1993:2;1982:9;1978:18;1970:26;;2042:9;2036:4;2032:20;2028:1;2017:9;2013:17;2006:47;2070:131;2196:4;2070:131;:::i;:::-;2062:139;;1789:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "147200",
								"executionCost": "188",
								"totalCost": "147388"
							},
							"external": {
								"deposit()": "44534",
								"withdraw()": "infinite"
							},
							"internal": {
								"penalty(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 193,
									"end": 1025,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 193,
									"end": 1025,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201f4a140f70e12496a29c9b5eba57e2546ddc761f0535fc76be8c0acb7ae06b9a64736f6c634300081a0033",
									".code": [
										{
											"begin": 193,
											"end": 1025,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "PUSH",
											"source": 0,
											"value": "D0E30DB0"
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 193,
											"end": 1025,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 509,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 509,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 509,
											"end": 758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 509,
											"end": 758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 509,
											"end": 758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 509,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 509,
											"end": 758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 509,
											"end": 758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 509,
											"end": 758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 509,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 509,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 509,
											"end": 758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 509,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 509,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 509,
											"end": 758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 509,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 509,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 509,
											"end": 758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 362,
											"end": 503,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 362,
											"end": 503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 362,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 362,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 362,
											"end": 503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 362,
											"end": 503,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 362,
											"end": 503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 362,
											"end": 503,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 509,
											"end": 758,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 509,
											"end": 758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 587,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 575,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 555,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 555,
											"end": 576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 555,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 555,
											"end": 576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 555,
											"end": 576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 555,
											"end": 576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 555,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 555,
											"end": 576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 555,
											"end": 576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 555,
											"end": 576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 555,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 555,
											"end": 576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 555,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 576,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 555,
											"end": 583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 555,
											"end": 583,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 555,
											"end": 588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 547,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 547,
											"end": 589,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 547,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 547,
											"end": 589,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 547,
											"end": 589,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 547,
											"end": 589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 613,
											"end": 625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 641,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 631,
											"end": 646,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 631,
											"end": 646,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 654,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 664,
											"end": 674,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 654,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 654,
											"end": 675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 654,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 654,
											"end": 675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 654,
											"end": 675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 654,
											"end": 675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 654,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 654,
											"end": 675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 654,
											"end": 675,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 654,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 654,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 675,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 654,
											"end": 682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 654,
											"end": 682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 631,
											"end": 687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 631,
											"end": 687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 631,
											"end": 687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 631,
											"end": 687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 631,
											"end": 687,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 631,
											"end": 687,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 631,
											"end": 687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 631,
											"end": 687,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 631,
											"end": 687,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 631,
											"end": 687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 631,
											"end": 687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 631,
											"end": 687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 631,
											"end": 687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 612,
											"end": 687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 612,
											"end": 687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 612,
											"end": 687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 713,
											"end": 720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 705,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 705,
											"end": 742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 705,
											"end": 742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 705,
											"end": 742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 705,
											"end": 742,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 705,
											"end": 742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 705,
											"end": 742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 705,
											"end": 742,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 705,
											"end": 742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 705,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 705,
											"end": 742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 705,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 705,
											"end": 742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 705,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 705,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 705,
											"end": 742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 705,
											"end": 742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 705,
											"end": 742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 705,
											"end": 742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 705,
											"end": 742,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 705,
											"end": 742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 705,
											"end": 742,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 705,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 705,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 537,
											"end": 758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 509,
											"end": 758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 362,
											"end": 503,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 362,
											"end": 503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 424,
											"end": 425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 423,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 414,
											"end": 425,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 406,
											"end": 426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 426,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 406,
											"end": 426,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 406,
											"end": 426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 460,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 460,
											"end": 495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 460,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 460,
											"end": 495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 468,
											"end": 477,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 460,
											"end": 495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 460,
											"end": 495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 460,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 460,
											"end": 495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 479,
											"end": 494,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 460,
											"end": 495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 460,
											"end": 495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 460,
											"end": 495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 456,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 436,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 436,
											"end": 457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 436,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 436,
											"end": 457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 436,
											"end": 457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 436,
											"end": 457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 436,
											"end": 457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 457,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 436,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 495,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 436,
											"end": 495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 495,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 436,
											"end": 495,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 436,
											"end": 495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 436,
											"end": 495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 495,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 362,
											"end": 503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 154,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7,
											"end": 154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 108,
											"end": 119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 130,
											"end": 148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 130,
											"end": 148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 160,
											"end": 274,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 160,
											"end": 274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 160,
											"end": 274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 160,
											"end": 274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 280,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 439,
											"end": 442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 541,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 536,
											"end": 539,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 460,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 460,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 460,
											"end": 543,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 460,
											"end": 543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 453,
											"end": 543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 641,
											"end": 644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 552,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 552,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 552,
											"end": 645,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 552,
											"end": 645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 670,
											"end": 671,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 661,
											"end": 672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 654,
											"end": 672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 654,
											"end": 672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 280,
											"end": 678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 868,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1033,
											"end": 1036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 890,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 890,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 883,
											"end": 1037,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 883,
											"end": 1037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 684,
											"end": 1063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1238,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1069,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 1185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1227,
											"end": 1231,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1222,
											"end": 1225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1238,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1411,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1244,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1403,
											"name": "PUSH",
											"source": 1,
											"value": "5769746864726177616C206661696C6564000000000000000000000000000000"
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1378,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1361,
											"end": 1404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1244,
											"end": 1411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1783,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1417,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1644,
											"end": 1646,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1639,
											"end": 1642,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1580,
											"end": 1647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1580,
											"end": 1647,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1580,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1745,
											"end": 1748,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1656,
											"end": 1749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1656,
											"end": 1749,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1656,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1776,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1769,
											"end": 1772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1765,
											"end": 1777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 2208,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1789,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 1995,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1982,
											"end": 1991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 1996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1970,
											"end": 1996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2042,
											"end": 2051,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2052,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2026,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2030,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2196,
											"end": 2200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2070,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2201,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2070,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 2208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 2208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 2208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 2208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/1_Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"deposit()": "d0e30db0",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:dev-run-script\":\"./scripts/deploy_with_ethers.ts\",\"details\":\"Store & retrieve value in a variable\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Storage\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/1_Storage.sol\":\"Storage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/1_Storage.sol\":{\"keccak256\":\"0x8a3e228ca995047b3a36df3f3c930a3c6e26db14c7e41fbe225c98b5af579ccb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1d8bcd3759bb665749317f616229a577369abef3fe00b07e448fa2c44f789d8f\",\"dweb:/ipfs/QmbVyXaJEZBxdR6XEucUgpUwTbbQXY6PS2EQryAAsuoPfM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 12,
								"contract": "contracts/1_Storage.sol:Storage",
								"label": "depositor",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(Deposit)7_storage)"
							},
							{
								"astId": 15,
								"contract": "contracts/1_Storage.sol:Storage",
								"label": "stakers",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(Deposit)7_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Storage.Deposit)",
								"numberOfBytes": "32",
								"value": "t_struct(Deposit)7_storage"
							},
							"t_struct(Deposit)7_storage": {
								"encoding": "inplace",
								"label": "struct Storage.Deposit",
								"members": [
									{
										"astId": 4,
										"contract": "contracts/1_Storage.sol:Storage",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 6,
										"contract": "contracts/1_Storage.sol:Storage",
										"label": "timestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/1_Storage.sol": {
				"ast": {
					"absolutePath": "contracts/1_Storage.sol",
					"exportedSymbols": {
						"Storage": [
							118
						]
					},
					"id": 119,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Storage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "62:128:0",
								"text": " @title Storage\n @dev Store & retrieve value in a variable\n @custom:dev-run-script ./scripts/deploy_with_ethers.ts"
							},
							"fullyImplemented": true,
							"id": 118,
							"linearizedBaseContracts": [
								118
							],
							"name": "Storage",
							"nameLocation": "202:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Storage.Deposit",
									"id": 7,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "249:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 7,
											"src": "241:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "241:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "273:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 7,
											"src": "265:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 5,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "265:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Deposit",
									"nameLocation": "224:7:0",
									"nodeType": "StructDefinition",
									"scope": 118,
									"src": "217:72:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "depositor",
									"nameLocation": "323:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 118,
									"src": "295:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Deposit_$7_storage_$",
										"typeString": "mapping(address => struct Storage.Deposit)"
									},
									"typeName": {
										"id": 11,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 8,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "303:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "295:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Deposit_$7_storage_$",
											"typeString": "mapping(address => struct Storage.Deposit)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 10,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 9,
												"name": "Deposit",
												"nameLocations": [
													"314:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 7,
												"src": "314:7:0"
											},
											"referencedDeclaration": 7,
											"src": "314:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Deposit_$7_storage_ptr",
												"typeString": "struct Storage.Deposit"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "stakers",
									"nameLocation": "348:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 118,
									"src": "338:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 13,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "338:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 14,
										"nodeType": "ArrayTypeName",
										"src": "338:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "396:107:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 19,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "414:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "418:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "414:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "424:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "414:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 18,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "406:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "406:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "406:20:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 25,
															"name": "depositor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "436:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Deposit_$7_storage_$",
																"typeString": "mapping(address => struct Storage.Deposit storage ref)"
															}
														},
														"id": 28,
														"indexExpression": {
															"expression": {
																"id": 26,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "446:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "450:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "446:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "436:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$7_storage",
															"typeString": "struct Storage.Deposit storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 30,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "468:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "472:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "468:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 32,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "479:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "485:9:0",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "479:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 29,
															"name": "Deposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "460:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Deposit_$7_storage_ptr_$",
																"typeString": "type(struct Storage.Deposit storage pointer)"
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "460:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Deposit_$7_memory_ptr",
															"typeString": "struct Storage.Deposit memory"
														}
													},
													"src": "436:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deposit_$7_storage",
														"typeString": "struct Storage.Deposit storage ref"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "436:59:0"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "371:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "378:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "396:0:0"
									},
									"scope": 118,
									"src": "362:141:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "537:221:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 42,
																		"name": "depositor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 12,
																		"src": "555:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Deposit_$7_storage_$",
																			"typeString": "mapping(address => struct Storage.Deposit storage ref)"
																		}
																	},
																	"id": 45,
																	"indexExpression": {
																		"expression": {
																			"id": 43,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "565:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 44,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "569:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "565:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "555:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Deposit_$7_storage",
																		"typeString": "struct Storage.Deposit storage ref"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "577:6:0",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "555:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "587:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "555:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 41,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "547:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "547:42:0"
											},
											{
												"assignments": [
													52,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 52,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "618:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 70,
														"src": "613:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 51,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "613:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 64,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "684:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"expression": {
																	"id": 53,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "631:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "635:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "631:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "642:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "631:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"baseExpression": {
																		"id": 56,
																		"name": "depositor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 12,
																		"src": "654:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Deposit_$7_storage_$",
																			"typeString": "mapping(address => struct Storage.Deposit storage ref)"
																		}
																	},
																	"id": 59,
																	"indexExpression": {
																		"expression": {
																			"id": 57,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "664:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "668:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "664:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "654:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Deposit_$7_storage",
																		"typeString": "struct Storage.Deposit storage ref"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "676:6:0",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "654:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "631:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "631:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "612:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 66,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "713:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c206661696c6564",
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "722:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																"typeString": "literal_string \"Withdrawal failed\""
															},
															"value": "Withdrawal failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88",
																"typeString": "literal_string \"Withdrawal failed\""
															}
														],
														"id": 65,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "705:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "705:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "705:37:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "518:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "526:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "537:0:0"
									},
									"scope": 118,
									"src": "509:249:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "805:213:0",
										"statements": [
											{
												"expression": {
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 76,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "815:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "824:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"expression": {
																	"id": 78,
																	"name": "stakers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "831:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "839:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "831:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "824:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "846:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "824:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "815:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "815:32:0"
											},
											{
												"body": {
													"id": 114,
													"nodeType": "Block",
													"src": "891:121:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 96,
																		"name": "stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "908:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 98,
																	"indexExpression": {
																		"id": 97,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 86,
																		"src": "916:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "908:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"id": 99,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "922:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "926:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "922:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "908:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 113,
															"nodeType": "IfStatement",
															"src": "905:97:0",
															"trueBody": {
																"id": 112,
																"nodeType": "Block",
																"src": "933:69:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 109,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 73,
																					"src": "980:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 104,
																								"name": "stakers",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 15,
																								"src": "959:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_storage",
																									"typeString": "address[] storage ref"
																								}
																							},
																							"id": 106,
																							"indexExpression": {
																								"id": 105,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 86,
																								"src": "967:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "959:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 103,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "951:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_payable_$",
																							"typeString": "type(address payable)"
																						},
																						"typeName": {
																							"id": 102,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "951:8:0",
																							"stateMutability": "payable",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 107,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "951:19:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 108,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "971:8:0",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "951:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "951:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 111,
																		"nodeType": "ExpressionStatement",
																		"src": "951:36:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 89,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "870:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 90,
															"name": "stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "872:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "880:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "872:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "870:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 115,
												"initializationExpression": {
													"assignments": [
														86
													],
													"declarations": [
														{
															"constant": false,
															"id": 86,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "866:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 115,
															"src": "861:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 85,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "861:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 88,
													"initialValue": {
														"hexValue": "30",
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "868:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "861:8:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "887:3:0",
														"subExpression": {
															"id": 93,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "887:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 95,
													"nodeType": "ExpressionStatement",
													"src": "887:3:0"
												},
												"nodeType": "ForStatement",
												"src": "857:155:0"
											}
										]
									},
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "penalty",
									"nameLocation": "773:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "789:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "781:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "780:16:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:0:0"
									},
									"scope": 118,
									"src": "764:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 119,
							"src": "193:832:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:988:0"
				},
				"id": 0
			}
		}
	}
}